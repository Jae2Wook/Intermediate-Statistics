par(mai = c(1, 1.3, 1, 1))
C = coef(Chic.glm)
#levels(CO2$Type)
palette(c("blue", "brown"))
plot(Type== "Quebec" ~ uptake, data = CO2, pch = 16, col = Type, ylab = "Probability of the origin of \ nthe plant from Quebec", main = "The Grass from Quebec")
curve(exp(C[1] + C[2]*x) / (1 + exp(C[1] + C[2]*x)), add = TRUE)
par(mai = c(1, 1.3, 1, 1))
C = coef(Chic.glm)
#levels(CO2$Type)
palette(c("blue", "brown"))
plot(Type== "Quebec" ~ uptake, data = CO2, pch = 16, col = Type, ylab = "Probability of the origin of \ nthe plant from Quebec", main = "The Grass from Quebec")
curve(exp(C[1] + C[2]*x) / (1 + exp(C[1] + C[2]*x)), add = TRUE, lwd = 1.2)
curve(exp(C[1] + C[2]*x) / (1 + exp(C[1] + C[2]*x)), add = TRUE, lwd = 1.2)
par(mai = c(1, 1.3, 1, 1))
C = coef(Chic.glm)
#levels(CO2$Type)
palette(c("blue", "brown"))
plot(Type== "Quebec" ~ uptake, data = CO2, pch = 16, col = Type, ylab = "Probability of the origin of \ nthe plant from Quebec", main = "The Grass from Quebec")
curve(exp(C[1] + C[2]*x) / (1 + exp(C[1] + C[2]*x)), add = TRUE, lwd = 1.2)
par(mai = c(1, 1.3, 1, 1))
C = coef(Chic.glm)
#levels(CO2$Type)
palette(c("blue", "brown"))
plot(Type== "Quebec" ~ uptake, data = CO2, pch = 16, col = Type, ylab = "Probability of the origin of \nthe plant from Quebec", main = "The Grass from Quebec")
curve(exp(C[1] + C[2]*x) / (1 + exp(C[1] + C[2]*x)), add = TRUE)
food.glm <- glm(participation ~ income + tenancy, data = foodstamp, family = binomial)
hoslem.test(food.glm$y, food.glm$fitted)
C = coef(food.glm)
# tenancy insight about odds
exp(C[3]) # tells that 15.83% of the odds of participating
# tenancy p-value is not good enough, so not including to the testInheritedMethods
foods.glm <- glm(participation ~ income, data = foodstamp, family = binomial)
library(robustbase)
library(ResourceSelection)
food.glm <- glm(participation ~ income + tenancy, data = foodstamp, family = binomial)
hoslem.test(food.glm$y, food.glm$fitted)
C = coef(food.glm)
# tenancy insight about odds
exp(C[3]) # tells that 15.83% of the odds of participating
summary(food.glm)
exp(-1.8427382)
library(mosaic)
library(ResourceSelection)
library(tidyverse)
library(pander)
predict(Chic.glm, data.frame(uptake = 30), type = 'response') %>% pander()
